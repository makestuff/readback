---------------------------- SDRAM READBACK EXAMPLE ----------------------------

INTRODUCTION

     +--------+     +--------+     +--------+     +--------+     +--------+
  -->|cmd_fifo|--/--|cmd_conv|--/--|mem_pipe|--/--|rsp_conv|--/--|rsp_fifo|-->
     +--------+  8  +--------+  16 +--------+  16 +--------+  8  +--------+
                                       ||
                                   +--------+
                                   |mem_ctrl|
                                   +--------+
                                       ||
                                   +--------+
                                   | SDRAM  |
                                   +--------+

This example provides an easy read/write interface to an SDRAM via a pair of
8-bit FIFOs. The host writes commands and write-data to the cmd_fifo and reads
read-data from the rsp_fifo.

The commands are always 16-bit word-aligned look like this:

  CCDD DDDD DDDD DDDD <args>

Where CC:

  00 -> Update pointer with these 14 bits D and the following 16-bits, giving
        a maximum pointer width of 30 bits

  01 -> Read a block of 16-bit words N given by the 14 bits D and the following
        16 bits (max block size 2^30). Subsequently, 2N data bytes need to be
        read from rsp_fifo.

  10 -> Write a block of 16-bit words N given by the 14 bits D and the following
        16 bits (max block size 2^30). Subsequently, 2N data bytes need to be
        written to cmd_fifo.


EXAMPLE: LX9 BOARD WITH 8MiB (64Mib) ONBOARD SDRAM:

Notice that the commands request 0x400000 16-bit words, so the subsequent reads
and writes are for 0x800000 bytes, which is 8MiB:

  hdlmake.py -t ../templates/fx2min/vhdl -b lx9
  flcli -i 04b4:8613 -j A7031 -v 04b4:8613 -x top_level.xsvf
  dd if=/dev/urandom of=random.dat bs=1024 count=8192
  flcli -v 04b4:8613 -a 'w0 0000000080400000;w0 "random.dat"'
  flcli -v 04b4:8613 -a 'w0 0000000040400000;r0 800000 "out.dat"'
  diff out.dat random.dat


EXAMPLE: LX9 BOARD WITH 16MiB (128Mib) ONBOARD SDRAM:

Notice that the commands request 0x800000 16-bit words, so the subsequent reads
and writes are for 0x1000000 bytes, which is 16MiB:

  hdlmake.py -t ../templates/fx2min/vhdl -b lx9
  flcli -i 04b4:8613 -j A7031 -v 04b4:8613 -x top_level.xsvf
  dd if=/dev/urandom of=random.dat bs=1024 count=16384
  flcli -v 04b4:8613 -a 'w0 0000000080800000;w0 "random.dat"'
  flcli -v 04b4:8613 -a 'w0 0000000040800000;r0 1000000 "out.dat"'
  diff out.dat random.dat


EXAMPLE: S3BOARD WITH 8MiB (64Mib) SDRAM DAUGHTERBOARD:

Notice that the commands request 0x400000 16-bit words, so the subsequent reads
and writes are for 0x800000 bytes, which is 8MiB:

  hdlmake.py -t ../templates/fx2all/vhdl -b s3board
  flcli -i 04b4:8613 -v 04b4:8613 -x top_level.xsvf
  dd if=/dev/urandom of=random.dat bs=1024 count=8192
  flcli -v 04b4:8613 -a 'w0 0000000080400000;w0 "random.dat"'
  flcli -v 04b4:8613 -a 'w0 0000000040400000;r0 800000 "out.dat"'
  diff out.dat random.dat
